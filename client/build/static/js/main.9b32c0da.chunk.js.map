{"version":3,"sources":["Authentication.js","SignUp.js","serviceWorker.js","index.js"],"names":["Authentication","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","login","password","email","react_default","a","createElement","className","htmlFor","type","id","placeholder","required","autoFocus","react_router_dom","to","React","Component","SignUp","handleSignUp","_ref","asyncToGenerator","regenerator_default","mark","_callee","e","obj","wrap","_context","prev","next","preventDefault","axios","post","stop","_x","apply","arguments","bind","assertThisInitialized","handleFields","event","console","log","target","value","setState","defineProperty","name","onChange","onClick","Boolean","window","location","hostname","match","ReactDOM","render","react_router","exact","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sPAGqBA,cACjB,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACdE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACTC,MAAO,GACPC,SAAU,GACVC,MAAO,IALGV,wEAWd,OACIW,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,0BAAd,mBACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,cAAf,SACAJ,EAAAC,EAAAC,cAAA,SAAOG,KAAK,QAAQC,GAAG,aAAaH,UAAU,eAAeI,YAAY,QAAQC,UAAQ,EAACC,WAAS,KAEvGT,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,cAAf,iBACAJ,EAAAC,EAAAC,cAAA,SAAOG,KAAK,QAAQC,GAAG,aAAaH,UAAU,eAAeI,YAAY,gBAAgBC,UAAQ,EAACC,WAAS,KAE/GT,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,iBAAf,YACAJ,EAAAC,EAAAC,cAAA,SAAOG,KAAK,WAAWC,GAAG,gBAAgBH,UAAU,eAAeI,YAAY,WAAWC,UAAQ,KAEtGR,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACdH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kDAAkDE,KAAK,UAAzE,UACAL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAMP,UAAU,OAAOQ,GAAG,WAAUX,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kDAAkDE,KAAK,UAAzE,wBAzC5BO,IAAMC,oECA7BC,cAEjB,SAAAA,EAAY1B,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsB,IACdzB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwB,GAAAnB,KAAAH,KAAMJ,KAWV2B,aAZkB,eAAAC,EAAA1B,OAAA2B,EAAA,EAAA3B,CAAA4B,EAAAjB,EAAAkB,KAYH,SAAAC,EAAOC,GAAP,IAAAC,EAAA,OAAAJ,EAAAjB,EAAAsB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACXL,EAAEM,iBACIL,EAAM,CACRzB,MAAOR,EAAKO,MAAMC,MAClBE,MAAOV,EAAKO,MAAMG,MAClBD,SAAUT,EAAKO,MAAME,UALd0B,EAAAE,KAAA,EAQLE,IAAMC,KAAK,wBAAwBP,GAR9B,wBAAAE,EAAAM,SAAAV,MAZG,gBAAAW,GAAA,OAAAf,EAAAgB,MAAAxC,KAAAyC,YAAA,GAGd5C,EAAKO,MAAQ,CACTC,MAAO,GACPC,SAAU,GACVC,MAAO,IAEXV,EAAK0B,aAAe1B,EAAK0B,aAAamB,KAAlB5C,OAAA6C,EAAA,EAAA7C,CAAAD,IACpBA,EAAK+C,aAAe/C,EAAK+C,aAAaF,KAAlB5C,OAAA6C,EAAA,EAAA7C,CAAAD,IATNA,4EAuBLgD,GACTC,QAAQC,IAAIF,EAAMG,OAAOC,OACzBjD,KAAKkD,SAALpD,OAAAqD,EAAA,EAAArD,CAAA,GAAgB+C,EAAMG,OAAOI,KAAOP,EAAMG,OAAOC,yCAIjD,OACIzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,0BAAd,WACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,cAAf,SACAJ,EAAAC,EAAAC,cAAA,SAAOG,KAAK,QAAQC,GAAG,aAAaH,UAAU,eAAeI,YAAY,QAAQqC,KAAK,QAAQH,MAAOjD,KAAKI,MAAMC,MAAOgD,SAAUrD,KAAK4C,aAAc5B,UAAQ,EAACC,WAAS,KAE1KT,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,cAAf,iBACAJ,EAAAC,EAAAC,cAAA,SAAOG,KAAK,QAAQC,GAAG,aAAaH,UAAU,eAAeI,YAAY,gBAAgBqC,KAAK,QAAQH,MAAOjD,KAAKI,MAAMG,MAAO8C,SAAUrD,KAAK4C,aAAc5B,UAAQ,EAACC,WAAS,KAElLT,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,iBAAf,YACAJ,EAAAC,EAAAC,cAAA,SAAOG,KAAK,WAAWC,GAAG,gBAAgBH,UAAU,eAAeI,YAAY,WAAWqC,KAAK,WAAWH,MAAOjD,KAAKI,MAAME,SAAU+C,SAAUrD,KAAK4C,aAAc5B,UAAQ,KAE/KR,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACdH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kDAAkDE,KAAK,SAASyC,QAAStD,KAAKuB,cAAhG,uBA1DAH,IAAMC,kBCStBkC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACLrD,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KACIV,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,kBAAkBC,UAAWtE,IAC/Ca,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAOE,KAAK,UAAUC,UAAW3C,MAGzC4C,SAASC,eAAe,SDkHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.9b32c0da.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default class Authentication extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            login: '',\n            password: '',\n            email: ''\n        }\n\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\n                        <div className=\"card card-signin my-5\">\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title text-center\">Sign In/Sign Up</h5>\n                                <form className=\"form-signin\">\n                                    <div className=\"form-label-group\">\n                                        <label htmlFor=\"inputEmail\">Login</label>\n                                        <input type=\"login\" id=\"inputLogin\" className=\"form-control\" placeholder=\"Login\" required autoFocus/>\n                                    </div>\n                                    <br/>\n\n                                    <div className=\"form-label-group\">\n                                        <label htmlFor=\"inputEmail\">Email address</label>\n                                        <input type=\"email\" id=\"inputEmail\" className=\"form-control\" placeholder=\"Email address\" required autoFocus/>\n                                    </div>\n                                    <br/>\n\n                                    <div className=\"form-label-group\">\n                                        <label htmlFor=\"inputPassword\">Password</label>\n                                        <input type=\"password\" id=\"inputPassword\" className=\"form-control\" placeholder=\"Password\" required/>\n                                    </div>\n                                    <br/>\n\n                                    <hr className=\"my-4\"></hr>\n                                    <button className=\"btn btn-lg btn-primary btn-block text-uppercase\" type=\"submit\">SignIn</button>\n                                    <br/>\n                                    <Link className=\"link\" to=\"/signup\"><button className=\"btn btn-lg btn-primary btn-block text-uppercase\" type=\"button\">SignUp</button></Link>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport axios from 'axios';\n\nexport default class SignUp extends React.Component {\n    \n    constructor(props){\n        super(props);\n\n        this.state = {\n            login: '',\n            password: '',\n            email: '',\n        }\n        this.handleSignUp = this.handleSignUp.bind(this);\n        this.handleFields = this.handleFields.bind(this);\n    }\n\n    handleSignUp = async (e) =>  {\n        e.preventDefault();\n        const obj = {\n            login: this.state.login,\n            email: this.state.email,\n            password: this.state.password\n        }\n\n        await axios.post('http://localhost:3001',obj);\n    }\n\n    handleFields(event) {\n        console.log(event.target.value);\n        this.setState({[event.target.name]: event.target.value})\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\n                        <div className=\"card card-signin my-5\">\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title text-center\">Sign Up</h5>\n                                <form className=\"form-signin\">\n                                    <div className=\"form-label-group\">\n                                        <label htmlFor=\"inputEmail\">Login</label>\n                                        <input type=\"login\" id=\"inputLogin\" className=\"form-control\" placeholder=\"Login\" name=\"login\" value={this.state.login} onChange={this.handleFields} required autoFocus/>\n                                    </div>\n                                    <br/>\n\n                                    <div className=\"form-label-group\">\n                                        <label htmlFor=\"inputEmail\">Email address</label>\n                                        <input type=\"email\" id=\"inputEmail\" className=\"form-control\" placeholder=\"Email address\" name=\"email\" value={this.state.email} onChange={this.handleFields} required autoFocus/>\n                                    </div>\n                                    <br/>\n\n                                    <div className=\"form-label-group\">\n                                        <label htmlFor=\"inputPassword\">Password</label>\n                                        <input type=\"password\" id=\"inputPassword\" className=\"form-control\" placeholder=\"Password\" name=\"password\" value={this.state.password} onChange={this.handleFields} required/>\n                                    </div>\n                                    <br/>\n\n                                    <hr className=\"my-4\"></hr>\n                                    <button className=\"btn btn-lg btn-primary btn-block text-uppercase\" type=\"submit\" onClick={this.handleSignUp}>SignUp</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Authentication from './Authentication';\nimport SignUp from './SignUp';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Router>\n        <div>\n            <Route exact path=\"/authentication\" component={Authentication} />\n            <Route path=\"/signup\" component={SignUp} />\n        </div>\n    </Router>,\n    document.getElementById('root')\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}