{"ast":null,"code":"import axios from 'axios';\nimport { deleteUser } from './AppActions';\nimport * as urls from '../../constants/urls';\nimport * as header from '../../constants/headers';\n\nconst loadArticle = article => {\n  return {\n    type: 'LOAD_ARTICLE',\n    payload: {\n      article\n    }\n  };\n};\n\nexport const updateFields = (field, value) => {\n  return {\n    type: 'UPDATE_FIELD',\n    payload: {\n      field,\n      value\n    }\n  };\n};\nexport const updateDisabled = isDisabled => {\n  return {\n    type: 'UDPATE_DISABLED',\n    payload: {\n      isDisabled\n    }\n  };\n};\nexport const updateShow = isShow => {\n  return {\n    type: 'UPDATE_SHOW',\n    payload: {\n      isShow\n    }\n  };\n};\nexport const viewErrors = message => {\n  return {\n    type: 'VIEW_ERRORS',\n    payload: {\n      message\n    }\n  };\n};\nexport const createOrEditArticle = (url, token, article) => {\n  return async function (dispatch) {\n    try {\n      if (article.id) {\n        const data = await axios.put(url, {\n          article\n        }, header.headerPostPut(token));\n        return data;\n      } else {\n        const data = await axios.post(url, {\n          article\n        }, header.headerPostPut(token));\n        dispatch(updateFields('', ''));\n        return data;\n      }\n    } catch (error) {\n      console.log(error);\n      const message = error.response.data.message;\n      const isInvalidToken = error.response.data.isInvalidToken;\n\n      if (isInvalidToken) {\n        error.isInvalidToken = isInvalidToken;\n        dispatch(deleteUser());\n        throw error;\n      } else {\n        dispatch(viewErrors(message));\n        throw error;\n      }\n    }\n  };\n};\nexport const getArticle = (token, id) => {\n  return async function (dispatch) {\n    try {\n      const url = urls.urlArticleId(id);\n      const article = await axios.get(url, header.headerGet(token));\n      dispatch(loadArticle(article.data));\n    } catch (error) {\n      const isInvalidToken = error.response.data.isInvalidToken;\n\n      if (isInvalidToken) {\n        error.isInvalidToken = isInvalidToken;\n        dispatch(deleteUser());\n        throw error;\n      } else {\n        console.log(error.response.data);\n        throw error;\n      }\n    }\n  };\n};\nexport const changeProperty = property => {\n  return {\n    type: 'CHANGE_PROPERTY',\n    payload: {\n      property\n    }\n  };\n};","map":{"version":3,"sources":["/media/user/HDD/taskList/client/src/redux/actions/ArticleActions.js"],"names":["axios","deleteUser","urls","header","loadArticle","article","type","payload","updateFields","field","value","updateDisabled","isDisabled","updateShow","isShow","viewErrors","message","createOrEditArticle","url","token","dispatch","id","data","put","headerPostPut","post","error","console","log","response","isInvalidToken","getArticle","urlArticleId","get","headerGet","changeProperty","property"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {deleteUser} from './AppActions';\nimport * as urls from '../../constants/urls';\nimport * as header from '../../constants/headers';\n\n\nconst loadArticle = (article) => {\n    return {\n        type: 'LOAD_ARTICLE',\n        payload: {\n            article\n        }\n    }\n}\n\nexport const updateFields = (field, value) => {\n    return {\n        type: 'UPDATE_FIELD',\n        payload: {\n            field,\n            value\n        }\n    }\n}\n\n\nexport const updateDisabled = (isDisabled) => {\n    return {\n        type: 'UDPATE_DISABLED',\n        payload: {\n            isDisabled\n        }\n    }\n}\n\nexport const updateShow = (isShow) => {\n    return {\n        type: 'UPDATE_SHOW',\n        payload: {\n            isShow\n        }\n    }\n}\n\nexport const viewErrors = (message) => {\n    return {\n        type: 'VIEW_ERRORS',\n        payload: {\n            message\n        }\n    }\n}\n\nexport const createOrEditArticle = (url, token, article) => {\n    return async function(dispatch) {\n        try {\n            if(article.id){\n                const data = await axios.put(url, {article},header.headerPostPut(token));\n                return data;\n            } else {\n                const data = await axios.post(url, {article},header.headerPostPut(token));\n                dispatch(updateFields('',''))\n                return data;\n            }\n        } catch (error) {\n            console.log(error);\n            const message = error.response.data.message;\n            const isInvalidToken = error.response.data.isInvalidToken;\n            if(isInvalidToken){\n                error.isInvalidToken = isInvalidToken;\n                dispatch(deleteUser());\n                throw error;\n            } else {\n                dispatch(viewErrors(message));\n                throw error\n            }\n        }\n    }\n}\n\nexport const getArticle = (token, id) => {\n\n    return async function(dispatch) {\n        try {\n            const url = urls.urlArticleId(id);\n            const article = await axios.get(url, header.headerGet(token));\n            dispatch(loadArticle(article.data));\n        } catch (error) {\n            const isInvalidToken = error.response.data.isInvalidToken;\n            if(isInvalidToken){\n                error.isInvalidToken = isInvalidToken;\n                dispatch(deleteUser());\n                throw error;\n            } else {\n                console.log(error.response.data); \n                throw error;\n            }\n        }\n    }\n}\n\nexport const changeProperty = (property) => {\n    return {\n        type: 'CHANGE_PROPERTY',\n        payload: {\n            property\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}