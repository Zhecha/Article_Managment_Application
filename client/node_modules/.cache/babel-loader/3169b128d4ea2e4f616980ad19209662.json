{"ast":null,"code":"var _jsxFileName = \"/media/user/HDD/taskList/client/src/components/EditArticle.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { updateFields, updateDisabled, getArticle } from '../redux/actions/ArticleActions';\nimport { token } from './Token';\nimport withNoUser from './withNoUser';\nimport * as urls from '../constants/urls';\nimport * as route from '../constants/routes';\nimport ArticleForm from './ArticleForm';\n\nclass EditArticle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleFields = this.handleFields.bind(this);\n    this.getData = this.getData.bind(this);\n  }\n\n  handleFields(event) {\n    this.props.updateDisabled(false);\n    this.props.updateFields(event.target.name, event.target.value);\n  }\n\n  async componentDidMount() {\n    try {\n      const gettedToken = token.getToken();\n      await this.props.getArticle(gettedToken, this.props.match.params.id);\n      this.props.updateDisabled(true);\n    } catch (error) {\n      if (error.isInvalidToken) {\n        token.logout();\n        this.props.history.push(route.SIGN_IN);\n      } else {\n        console.log(error);\n      }\n    }\n  }\n\n  getData() {\n    const url = urls.urlArticleId(this.props.match.params.id);\n    const article = {\n      id: this.props.match.params.id,\n      title: this.props.article.title,\n      body: this.props.article.body\n    };\n    return {\n      url,\n      article\n    };\n  }\n\n  render() {\n    return React.createElement(ArticleForm, {\n      header: \"EditArticle\",\n      title: this.props.article.title,\n      body: this.props.article.body,\n      handleFields: this.handleFields,\n      isDisabled: this.props.isDisabled,\n      isEdit: true,\n      getData: this.getData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    article: state.article.data,\n    isDisabled: state.article.isDisabled\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateFields: (field, value) => dispatch(updateFields(field, value)),\n    updateDisabled: isDisabled => dispatch(updateDisabled(isDisabled)),\n    getArticle: (token, id) => dispatch(getArticle(token, id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withNoUser(EditArticle));","map":{"version":3,"sources":["/media/user/HDD/taskList/client/src/components/EditArticle.js"],"names":["React","connect","updateFields","updateDisabled","getArticle","token","withNoUser","urls","route","ArticleForm","EditArticle","Component","constructor","props","handleFields","bind","getData","event","target","name","value","componentDidMount","gettedToken","getToken","match","params","id","error","isInvalidToken","logout","history","push","SIGN_IN","console","log","url","urlArticleId","article","title","body","render","isDisabled","mapStateToProps","state","data","mapDispatchToProps","dispatch","field"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport {updateFields,updateDisabled,getArticle} from '../redux/actions/ArticleActions';\nimport {token} from './Token';\nimport withNoUser from './withNoUser';\nimport * as urls from '../constants/urls';\nimport * as route from '../constants/routes';\nimport ArticleForm from './ArticleForm';\n\nclass EditArticle extends React.Component {\n    \n    constructor(props){\n        super(props);\n        this.handleFields = this.handleFields.bind(this);\n        this.getData = this.getData.bind(this);\n    }\n\n\n    handleFields(event) {\n        this.props.updateDisabled(false);\n        this.props.updateFields(event.target.name, event.target.value);\n    }\n\n    async componentDidMount() {\n        try {\n            const gettedToken = token.getToken();\n            await this.props.getArticle(gettedToken, this.props.match.params.id);\n            this.props.updateDisabled(true); \n        } catch (error) {\n            if(error.isInvalidToken){\n                token.logout();\n                this.props.history.push(route.SIGN_IN);\n            } else {\n                console.log(error);\n            }\n        }\n    }\n\n    getData(){\n        const url = urls.urlArticleId(this.props.match.params.id); \n        const article = { \n            id: this.props.match.params.id, \n            title: this.props.article.title, \n            body: this.props.article.body \n        }\n        return {url,article};\n    }\n\n    render() {\n\n        return (\n            <ArticleForm header=\"EditArticle\" title={this.props.article.title} body={this.props.article.body}\n                        handleFields={this.handleFields} isDisabled={this.props.isDisabled} isEdit={true} getData={this.getData}/>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        article: state.article.data,\n        isDisabled: state.article.isDisabled,\n    }\n};\n  \nconst mapDispatchToProps = (dispatch) => {\n    return {\n        updateFields: (field, value) => dispatch(updateFields(field, value)),\n        updateDisabled: (isDisabled) => dispatch(updateDisabled(isDisabled)),\n        getArticle: (token, id) => dispatch(getArticle(token, id))\n    }\n};\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(withNoUser(EditArticle));\n"]},"metadata":{},"sourceType":"module"}