{"ast":null,"code":"var _jsxFileName = \"/media/user/HDD/taskList/client/src/components/FooterPagination.js\";\nimport React from 'react';\nimport { token } from './Token';\nimport * as route from '../constants/routes';\nimport withNoUser from './withNoUser';\nimport { connect } from 'react-redux';\nimport Pagination from 'react-bootstrap/Pagination';\nimport { getPagesData } from '../redux/actions/PageActions';\nimport * as func from '../functions/functions';\n\nclass FooterPagination extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleGetPagesData = this.handleGetPagesData.bind(this);\n  }\n\n  async handleGetPagesData(pageNumber) {\n    try {\n      const gettedToken = token.getToken();\n      const limit = this.props.page.perPage;\n\n      if (this.props.location.search.length) {\n        const query = func.queryParse(this.props.location.search);\n\n        if (pageNumber === 1) {\n          if (limit === 5) {\n            if (!query.sort) {\n              this.props.history.push(route.ARTICLE_LIST);\n              await this.props.getPagesData(gettedToken, pageNumber, limit, this.props.isOnlyPrivate);\n            } else {\n              this.props.history.push(route.pageArticleRouteSort(query.sort, query.by));\n              await this.props.getPagesData(gettedToken, pageNumber, limit, query.sort, query.by, this.props.isOnlyPrivate);\n            }\n          } else {\n            if (!query.sort) {\n              this.props.history.push(route.pageArticleRouteLimit(limit));\n              await this.props.getPagesData(gettedToken, pageNumber, limit, this.props.isOnlyPrivate);\n            } else {\n              this.props.history.push(route.pageArticleLimitRouteWithSort(limit, query.sort, query.by));\n              await this.props.getPagesData(gettedToken, pageNumber, limit, query.sort, query.by, this.props.isOnlyPrivate);\n            }\n          }\n        } else if (!query.sort) {\n          this.props.history.push(route.pageArticleRoute(pageNumber, limit));\n          await this.props.getPagesData(gettedToken, pageNumber, limit, this.props.isOnlyPrivate);\n        } else {\n          this.props.history.push(route.pageArticleRouteWithSort(pageNumber, limit, query.sort, query.by));\n          await this.props.getPagesData(gettedToken, pageNumber, limit, query.sort, query.by, this.props.isOnlyPrivate);\n        }\n      } else {\n        this.props.history.push(route.pageArticleRoute(pageNumber, limit));\n        await this.props.getPagesData(gettedToken, pageNumber, limit, this.props.isOnlyPrivate);\n      }\n    } catch (error) {\n      if (error.isInvalidToken) {\n        token.logout();\n        this.props.history.push(route.SIGN_IN);\n      } else {\n        console.log(error.response);\n      }\n    }\n  }\n\n  render() {\n    let renderPageNumers;\n    const pageNumbers = [];\n\n    if (this.props.page.total !== null) {\n      for (let i = 1; i <= this.props.page.total; i++) {\n        pageNumbers.push(i);\n      }\n\n      renderPageNumers = pageNumbers.map(number => {\n        let active = this.props.page.currentPage === number ? true : false;\n\n        if (number === 1 || number === this.props.page.total || number >= this.props.page.currentPage - 2 && number <= this.props.page.currentPage + 2) {\n          return React.createElement(Pagination.Item, {\n            key: number,\n            onClick: () => {\n              this.handleGetPagesData(number);\n            },\n            active: active,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          }, number);\n        }\n      });\n    }\n\n    return React.createElement(Pagination, {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, renderPageNumers && renderPageNumers);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    page: state.page.page,\n    isDesc: state.page.isDesc,\n    isOnlyPrivate: state.page.isOnlyPrivate\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getPagesData: (token, pageNumber, limit, sort, sortBy) => dispatch(getPagesData(token, pageNumber, limit, sort, sortBy))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withNoUser(FooterPagination));","map":{"version":3,"sources":["/media/user/HDD/taskList/client/src/components/FooterPagination.js"],"names":["React","token","route","withNoUser","connect","Pagination","getPagesData","func","FooterPagination","Component","constructor","props","handleGetPagesData","bind","pageNumber","gettedToken","getToken","limit","page","perPage","location","search","length","query","queryParse","sort","history","push","ARTICLE_LIST","isOnlyPrivate","pageArticleRouteSort","by","pageArticleRouteLimit","pageArticleLimitRouteWithSort","pageArticleRoute","pageArticleRouteWithSort","error","isInvalidToken","logout","SIGN_IN","console","log","response","render","renderPageNumers","pageNumbers","total","i","map","number","active","currentPage","display","flexDirection","justifyContent","mapStateToProps","state","isDesc","mapDispatchToProps","dispatch","sortBy"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {token} from './Token';\nimport * as route from '../constants/routes';\nimport withNoUser from './withNoUser';\nimport { connect } from 'react-redux';\nimport Pagination from 'react-bootstrap/Pagination';\nimport {getPagesData} from '../redux/actions/PageActions';\nimport * as func from '../functions/functions';\n \nclass FooterPagination extends React.Component {\n    \n    constructor(props){\n        super(props);\n        this.handleGetPagesData = this.handleGetPagesData.bind(this);\n    }\n    \n    async handleGetPagesData(pageNumber) {\n        try {\n            const gettedToken = token.getToken()\n            const limit = this.props.page.perPage;\n            if(this.props.location.search.length){\n                const query = func.queryParse(this.props.location.search);\n                if(pageNumber === 1){\n                    if(limit === 5) {\n                        if(!query.sort){\n                            this.props.history.push(route.ARTICLE_LIST);\n                            await this.props.getPagesData(gettedToken,pageNumber,limit,this.props.isOnlyPrivate);\n                        } else {\n                            this.props.history.push(route.pageArticleRouteSort(query.sort,query.by))\n                            await this.props.getPagesData(gettedToken,pageNumber,limit,query.sort, query.by,this.props.isOnlyPrivate);\n                        }\n                    } else {\n                        if(!query.sort){\n                            this.props.history.push(route.pageArticleRouteLimit(limit));\n                            await this.props.getPagesData(gettedToken,pageNumber,limit,this.props.isOnlyPrivate);\n                        } else {\n                            this.props.history.push(route.pageArticleLimitRouteWithSort(limit,query.sort,query.by))\n                            await this.props.getPagesData(gettedToken,pageNumber,limit,query.sort, query.by,this.props.isOnlyPrivate);\n                        }\n                    }\n                } else if(!query.sort) {\n                    this.props.history.push(route.pageArticleRoute(pageNumber, limit))\n                    await this.props.getPagesData(gettedToken,pageNumber,limit,this.props.isOnlyPrivate);\n                } else {\n                    this.props.history.push(route.pageArticleRouteWithSort(pageNumber,limit,query.sort,query.by))\n                    await this.props.getPagesData(gettedToken,pageNumber,limit,query.sort, query.by,this.props.isOnlyPrivate);\n                }\n            } else {\n                this.props.history.push(route.pageArticleRoute(pageNumber,limit));\n                await this.props.getPagesData(gettedToken,pageNumber,limit,this.props.isOnlyPrivate);\n            }\n        } catch (error) {\n            if(error.isInvalidToken){\n                token.logout();\n                this.props.history.push(route.SIGN_IN);\n            } else {\n                console.log(error.response);\n            }\n        }\n    }\n\n    render() {\n        \n        let renderPageNumers;\n        const pageNumbers = [];\n\n        if (this.props.page.total !== null) {\n            for (let i = 1; i <= this.props.page.total; i++) {\n              pageNumbers.push(i);\n            }\n\n            renderPageNumers = pageNumbers.map(number => {\n                let active = this.props.page.currentPage === number ? true : false;\n              \n                if (number === 1 || number === this.props.page.total || (number >= this.props.page.currentPage - 2 && number <= this.props.page.currentPage + 2)) {\n                  return (\n                    <Pagination.Item key={number} onClick={() => {this.handleGetPagesData(number)}} active={active}>{number}</Pagination.Item>\n                  );\n                }\n            });\n        }\n\n        return (\n                <Pagination style={{display: \"flex\", flexDirection:\"row\", justifyContent:'center'}}>\n                    {renderPageNumers && renderPageNumers}\n                </Pagination>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n       page: state.page.page,\n       isDesc: state.page.isDesc,\n       isOnlyPrivate: state.page.isOnlyPrivate\n    }\n};\n  \nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getPagesData: (token, pageNumber, limit, sort, sortBy) => dispatch(getPagesData(token, pageNumber, limit, sort, sortBy))\n    }\n};\n\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(withNoUser(FooterPagination));"]},"metadata":{},"sourceType":"module"}