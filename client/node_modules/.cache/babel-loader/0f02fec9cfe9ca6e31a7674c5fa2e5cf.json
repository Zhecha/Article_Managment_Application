{"ast":null,"code":"var _jsxFileName = \"/media/user/HDD/taskList/client/src/components/withUser.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router\";\nimport * as route from '../constants/routes';\nexport default function withUser(AuthComponent) {\n  class withUserRedux extends React.Component {\n    constructor(props) {\n      super(props);\n      this.unmounted = false;\n    }\n\n    componentDidMount() {\n      if (this.props.user) {\n        this.unmounted = true;\n        this.props.history.push(route.ARTICLE_LIST);\n      } else {\n        this.unmounted = false;\n      }\n    }\n\n    componentWillUnmount() {\n      this.unmounted = true;\n    }\n\n    render() {\n      if (!this.unmounted) {\n        return React.createElement(AuthComponent, Object.assign({\n          history: this.props.history\n        }, this.props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }));\n      } else {\n        return null;\n      }\n    }\n\n  }\n\n  const mapStateToProps = state => {\n    return {\n      user: state.app.user\n    };\n  };\n\n  const mapDispatchToProps = () => {\n    return {};\n  };\n\n  return connect(mapStateToProps, mapDispatchToProps)(withRouter(withUserRedux));\n}","map":{"version":3,"sources":["/media/user/HDD/taskList/client/src/components/withUser.js"],"names":["React","connect","withRouter","route","withUser","AuthComponent","withUserRedux","Component","constructor","props","unmounted","componentDidMount","user","history","push","ARTICLE_LIST","componentWillUnmount","render","mapStateToProps","state","app","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,qBAAvB;AAEA,eAAe,SAASC,QAAT,CAAkBC,aAAlB,EAAgC;AAE3C,QAAMC,aAAN,SAA4BN,KAAK,CAACO,SAAlC,CAA4C;AAExCC,IAAAA,WAAW,CAACC,KAAD,EAAO;AACd,YAAMA,KAAN;AACA,WAAKC,SAAL,GAAiB,KAAjB;AAEH;;AAEDC,IAAAA,iBAAiB,GAAG;AAChB,UAAG,KAAKF,KAAL,CAAWG,IAAd,EAAmB;AACf,aAAKF,SAAL,GAAiB,IAAjB;AACA,aAAKD,KAAL,CAAWI,OAAX,CAAmBC,IAAnB,CAAwBX,KAAK,CAACY,YAA9B;AACH,OAHD,MAGO;AACH,aAAKL,SAAL,GAAiB,KAAjB;AACH;AACJ;;AAEDM,IAAAA,oBAAoB,GAAG;AACnB,WAAKN,SAAL,GAAiB,IAAjB;AACH;;AAEDO,IAAAA,MAAM,GAAG;AACL,UAAG,CAAC,KAAKP,SAAT,EAAoB;AAChB,eACI,oBAAC,aAAD;AAAe,UAAA,OAAO,EAAE,KAAKD,KAAL,CAAWI;AAAnC,WAAgD,KAAKJ,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAGH,OAJD,MAKK;AACD,eAAO,IAAP;AACH;AACJ;;AA9BuC;;AAiC5C,QAAMS,eAAe,GAAIC,KAAD,IAAW;AAC/B,WAAO;AACJP,MAAAA,IAAI,EAAEO,KAAK,CAACC,GAAN,CAAUR;AADZ,KAAP;AAGH,GAJD;;AAMA,QAAMS,kBAAkB,GAAG,MAAM;AAC7B,WAAO,EAAP;AAGH,GAJD;;AAMA,SAAOpB,OAAO,CAACiB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CnB,UAAU,CAACI,aAAD,CAAvD,CAAP;AAEH","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router\";\nimport * as route from '../constants/routes';\n\nexport default function withUser(AuthComponent){\n\n    class withUserRedux extends React.Component {\n\n        constructor(props){\n            super(props);\n            this.unmounted = false;\n\n        }\n        \n        componentDidMount() {\n            if(this.props.user){\n                this.unmounted = true;\n                this.props.history.push(route.ARTICLE_LIST);\n            } else {\n                this.unmounted = false;\n            }\n        }\n\n        componentWillUnmount() {\n            this.unmounted = true;\n        }\n\n        render() {\n            if(!this.unmounted) {\n                return (\n                    <AuthComponent history={this.props.history} {...this.props}/>\n                )\n            }\n            else {\n                return null\n            }\n        }\n    }\n\n    const mapStateToProps = (state) => {\n        return {\n           user: state.app.user\n        }\n    };\n      \n    const mapDispatchToProps = () => {\n        return {\n            \n        }\n    };\n      \n    return connect(mapStateToProps, mapDispatchToProps)(withRouter(withUserRedux));\n\n}\n"]},"metadata":{},"sourceType":"module"}